- name: "{{ django_venv_dir }}/bin/activate script contains proper environment variables -- no lookup bug, https://github.com/ansible/ansible/issues/16776"
  lineinfile:
    dest={{ django_venv_dir }}/bin/activate 
    line="export {{ django_envvar_prefix }}_DB_PASSWORD=\"{{ django_db_password }}\""
  no_log: True

- name: "{{ django_venv_dir }}/bin/activate script contains proper environment variables -- no lookup bug, https://github.com/ansible/ansible/issues/16776"
  lineinfile:
    dest={{ django_venv_dir }}/bin/activate 
    line="export PGPASSWORD=\"{{ django_db_password}}\""
  no_log: True

- name: "{{ django_venv_dir }}/bin/activate script contains proper environment variables"
  lineinfile: dest={{ django_venv_dir }}/bin/activate line="{{ item }}"
  no_log: True
  with_items:
    - export {{ django_envvar_prefix }}_HOSTNAME="{{ django_hostname }}"
    - export {{ django_envvar_prefix }}_SECRET_KEY="{{ django_secret_key }}"
    - export {{ django_envvar_prefix }}_DB_NAME="{{ django_db_name }}"
    - export {{ django_envvar_prefix }}_DB_USER="{{ django_db_user }}"
    - export {{ django_envvar_prefix }}_DB_HOST="{{ django_db_host }}"
    - export {{ django_envvar_prefix }}_DB_PORT="{{ django_db_port }}"
    - export {{ django_envvar_prefix }}_NOTIFICATIONS_HOST="{{ django_notifications_host }}"
    - export {{ django_envvar_prefix }}_MEDIA_ROOT="{{ django_media_root }}"
    - export {{ django_envvar_prefix }}_GOOGLE_ANALYTICS_PROPERTY_ID="{{ django_google_analytics_property_id }}"
    - export {{ django_envvar_prefix }}_GOOGLE_VERIFICATION_CODE="{{ django_google_verification_code }}"
    - export {{ django_envvar_prefix }}_UZYWAJ_PUNKTACJI_WEWNETRZNEJ="{{ django_uzywaj_punktacji_wewnetrznej }}"
    - export {{ django_envvar_prefix }}_THEME_NAME="{{ django_theme_name }}"
    - export {{ django_envvar_prefix }}_SESSION_SECURITY_WARN_AFTER="{{ django_session_security_warn_after }}"
    - export {{ django_envvar_prefix }}_SESSION_SECURITY_EXPIRE_AFTER="{{ django_session_security_expire_after }}"
    - export {{ django_envvar_prefix }}_PASSWORD_DURATION_SECONDS="{{ django_password_duration_seconds }}"
    - export {{ django_envvar_prefix }}_USE_PASSWORD_HISTORY="{{ django_password_use_history }}"
    - export {{ django_envvar_prefix }}_PASSWORD_HISTORY_COUNT="{{ django_password_history_count }}"
    - export {{ django_envvar_prefix }}_PUNKTUJ_MONOGRAFIE="{{ django_bpp_punktuj_monografie }}"
    - export {{ django_envvar_prefix }}_INLINE_DLA_AUTOROW="{{ django_bpp_inline_dla_autorow }}"
    - export {{ django_envvar_prefix }}_REDIS_DB_BROKER="{{ django_bpp_redis_db_broker }}"
    - export {{ django_envvar_prefix }}_REDIS_DB_CELERY="{{ django_bpp_redis_db_celery }}"
    - export {{ django_envvar_prefix }}_REDIS_DB_SESSION="{{ django_bpp_redis_db_session }}"
    - export {{ django_envvar_prefix }}_REDIS_DB_CACHE="{{ django_bpp_redis_db_cache }}"
    - export {{ django_envvar_prefix }}_REDIS_DB_LOCKS="{{ django_bpp_redis_db_locks }}"
    - export PGDATABASE="{{ django_db_name}}"
    - export PGUSER="{{ django_db_user}}"
    - export PGHOST="{{ django_db_host }}"
    - export PGPORT="{{ django_db_port}}"
    - export DJANGO_SETTINGS_MODULE="{{ django_settings_module }}"

- name: make sure .bashrc exists
  command: touch {{ django_home_dir }}/.bashrc
  
- name: ".bashrc activates default environment"
  lineinfile: dest={{ django_home_dir }}/.bashrc line="{{ item }}"
  with_items:
    - "source {{ django_venv_dir }}/bin/activate"

- name: make sure .zshrc exists
  command: touch {{ django_home_dir }}/.zshrc
  
- name: ".zshrc activates default environment"
  lineinfile: dest={{ django_home_dir }}/.zshrc line="{{ item }}"
  with_items:
    - "source {{ django_venv_dir }}/bin/activate"

- name: RAVEN_CONFIG_URL is set, if enabled
  lineinfile: dest={{ django_venv_dir }}/bin/activate line="{{ item }}" 
  with_items:
    - export {{ django_envvar_prefix }}_RAVEN_CONFIG_URL={{ django_raven_url }}
  when: django_enable_raven

- name: RAVEN_CONFIG_URL is removed, if not enabled
  lineinfile: dest={{ django_venv_dir }}/bin/activate line="{{ item }}" state=absent
  with_items:
    - export {{ django_envvar_prefix }}_RAVEN_CONFIG_URL={{ django_raven_url }}
  when: not django_enable_raven

